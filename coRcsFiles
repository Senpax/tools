#!/usr/bin/env bash

RESTORE='\033[0m'
GREEN='\e[32m'
YELLOW='\e[33m'
LIGHTRED='\e[91m'

RELATIVE_PATH_TO_SERVER=$1/
SERVER=$2

PATH_TO_SERVER=$RELATIVE_PATH_TO_SERVER$SERVER

declare -a RCS_FILES_TO_VERIFY

SEPERATOR="========================================================================================================="

echo Scanning $PATH_TO_SERVER for RCS directories


find $PATH_TO_SERVER -type d -name "RCS" | while read RCS_DIRECTORY; do
	echo
	echo -e "${YELLOW}Found $RCS_DIRECTORY${RESTORE}"
	
	# Traverse through each RCS subdirectory
	for f in $RCS_DIRECTORY/*
	do
		echo $SEPERATOR
		# Check if the file within the RCS directory has a ,v at the end
		if [[ $f == *",v"* ]]; then
			
			# Remove ,v from file
  			rcsFileWithoutCommaV=${f::-2}
  		
			rcsFileToCheckOut=${rcsFileWithoutCommaV##*/}
			printf "Preparing to chekout $f\n\n"

			find $RCS_DIRECTORY/.. -name $rcsFileToCheckOut | while read alreadyCheckedOutFile; do

				printf "${YELLOW}Comparing\n---------\nFile in RCS: $f\nChecked out file: $alreadyCheckedOutFile ${RESTORE}\n"

				DIFF=$(co -p -q -kk $f | diff -b -u -I '@(#)' -I '#.*:' $alreadyCheckedOutFile -)

				if [ "$DIFF" != "" ]; then
					RCS_FILES_TO_VERIFY+=("$f")

					printf "${LIGHTRED}FILES DO NOT MATCH${RESTORE}\n"
					printf "${LIGHTRED}Skipping $f${RESTORE}\n\n"
				else
					printf "${GREEN}---------\nFILES MATCH${RESTORE}\n\n"
					printf "Checking out $rcsFileToCheckOut from $RCS_DIRECTORY/..\n"

					# Go to parent directory of RCS directory, remove already checked out file, check out from the RCS directory ( fresh copy )
					( cd $RCS_DIRECTORY/.. ; co -f $rcsFileToCheckOut )
				fi
			done
		else
			printf "File was checked out inside of the RCS directory\n"
		fi
	done
done

(cd $PATH_TO_SERVER; git init && ~/gitprojects/tools/rcs-fast-export/rcs-fast-export.rb . | git fast-import && git reset)


echo ---
printf '%s\n' "${RCS_FILES_TO_VERIFY[@]}"
echo ---

echo 
